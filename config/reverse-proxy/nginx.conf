events {
  worker_connections  1024;
}

http {
    proxy_buffers 8 16k;
    proxy_buffer_size 16k; 
    proxy_busy_buffers_size 16k;

    sendfile on;

    server {
        server_name localhost;
        listen 80;

        # ----------------------------------------------------------------------
        # HELLO WORLD SERVICE
        # ----------------------------------------------------------------------

        location = / {
            auth_request        /oauth2/auth;
            auth_request_set    $token $upstream_http_x_auth_request_access_token;

            proxy_pass http://hello-world-service:5000;

            proxy_set_header X-Access-Token         $token;
            proxy_set_header Authorization          "Bearer ${token}";
            proxy_set_header X-Forwarded-Host       $http_host;
            proxy_set_header X-Forwarded-Proto      $scheme;
            proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
            proxy_set_header Host                   $host:$server_port;
        }

        # ----------------------------------------------------------------------
        # OAUTH2-PROXY
        # ----------------------------------------------------------------------

        # If any of the console pages results in a 401 status, redirect to
        # oauth2-proxy's signin; which ultimately results in going to our login
        # page.
        error_page 401 = /oauth2/start;

        # Backend proxying uses this location to authenticate using the
        # auth_request directive:
        location = /oauth2/auth {
            # Only internal (NGINX) requests are made to this location.
            internal;
            proxy_pass http://oauth2-proxy:4180;

            # nginx auth_request includes headers but not body
            proxy_set_header            Content-Length   "";
            proxy_pass_request_body     off;
            proxy_set_header Host       $host:$server_port;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Scheme   $scheme;
        }

        # Externally, this location is used for the endpoints /oauth2/sign_in,
        # /oauth2/sign_out, /oauth2/start, /oauth2/callback, etc.
        # https://oauth2-proxy.github.io/oauth2-proxy/docs/features/endpoints/
        location /oauth2/ {
            proxy_pass http://oauth2-proxy:4180;

            # Signin doesn't work correctly without this and I am unsure why.
            # Without this, logging in results in a 403 for /oauth2/callback.
            proxy_set_header Host       $host:$server_port;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Scheme   $scheme;
        }
    }

    server {
        server_name idp.localhost
        listen 80;

        # ----------------------------------------------------------------------
        # OIDC PROVIDER
        # ----------------------------------------------------------------------

        location / {
            proxy_pass http://mock-oidc-server:9090;

            proxy_set_header X-Forwarded-Host       $http_host;
            proxy_set_header X-Forwarded-Proto      $scheme;
            proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
            proxy_set_header Host                   $host:$server_port;
        }
    }
}
